"use strict";(self.webpackChunksmashub_github_io=self.webpackChunksmashub_github_io||[]).push([[317],{3905:(e,t,o)=>{o.d(t,{Zo:()=>l,kt:()=>m});var a=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,a,r=function(e,t){if(null==e)return{};var o,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,n=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(o),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||n;return o?a.createElement(h,i(i({ref:t},l),{},{components:o})):a.createElement(h,i({ref:t},l))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=o.length,i=new Array(n);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<n;p++)i[p]=o[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},2483:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var a=o(7462),r=(o(7294),o(3905));const n={sidebar_position:2},i="Data export and statistics",s={unversionedId:"choco/dataexport_statistics",id:"choco/dataexport_statistics",title:"Data export and statistics",description:"Exporting ChoCo as a JAMS dataset",source:"@site/docs/choco/dataexport_statistics.md",sourceDirName:"choco",slug:"/choco/dataexport_statistics",permalink:"/docs/choco/dataexport_statistics",draft:!1,editUrl:"https://github.com/smashub/smashub.github.io/docs/docs/choco/dataexport_statistics.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Mission and content",permalink:"/docs/choco/mission_content"},next:{title:"Examples of JAMS files",permalink:"/docs/choco/choco_jams"}},c={},p=[{value:"Exporting ChoCo as a JAMS dataset",id:"exporting-choco-as-a-jams-dataset",level:2},{value:"Create your own ChoCo dataset",id:"create-your-own-choco-dataset",level:3},{value:"Extracting statistics from a ChoCo dataset",id:"extracting-statistics-from-a-choco-dataset",level:2}],l={toc:p};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-export-and-statistics"},"Data export and statistics"),(0,r.kt)("h2",{id:"exporting-choco-as-a-jams-dataset"},"Exporting ChoCo as a JAMS dataset"),(0,r.kt)("p",null,"To export ",(0,r.kt)("strong",{parentName:"p"},"ChoCo")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"partition")," branch (our factory of ChoCo collections), simply run the command below with the number of threads (",(0,r.kt)("inlineCode",{parentName:"p"},"n_workers"),") you can afford for this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python create.py ../choco-jams \\\n    --jams_version converted --exclude ireal-pro:forum --n_workers 4\n")),(0,r.kt)("p",null,"To export ",(0,r.kt)("strong",{parentName:"p"},"ChoCo XT")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"partition")," branch, we just need to avoid excluding some sub-collections. You can use the command below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python create.py ../choco-jams \\\n    --jams_version converted --n_workers 4\n")),(0,r.kt)("h3",{id:"create-your-own-choco-dataset"},"Create your own ChoCo dataset"),(0,r.kt)("p",null,"If you want a custom subset of ChoCo, based on specific partitions to include/exclude or on certain expected metadata, you just need to play around with the ",(0,r.kt)("inlineCode",{parentName:"p"},"choco/create.py")," script (see below for documentation)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Dataset creation scripts for ChoCo.\n\npositional arguments:\n  out_dir               Directory where data will be exported.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --jams_version {original,converted}\n                        Type of JAMS files to consider from ChoCo.\n  --input_meta INPUT_META\n                        Path to the CSV file with the desired metadata.\n  --include INCLUDE [INCLUDE ...]\n                        Name of partitions to include in the dataset.\n  --exclude EXCLUDE [EXCLUDE ...]\n                        Name of partitions to exclude from the dataset.\n  --n_workers N_WORKERS\n                        Number of workers for parallel computation.\n  --log_dir LOG_DIR     Directory where log files will be generated.\n  --debug               Whether to print logging info messages.\n  --resume              Whether to resume the transformation process.\n")),(0,r.kt)("p",null,"Example on a custom subset of ChoCo that we are using in ",(0,r.kt)("inlineCode",{parentName:"p"},"musilar")," to trace musical influence."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python create.py ../../musilar/data/influence/choco-beatles --jams_version original \\\n    --exclude chordify robbie-williams uspop2002 rwc-pop biab-internet-corpus \\\n    jazz-corpus wikifonia --n_workers 4\n")),(0,r.kt)("p",null,"Example of a custom subset including audio annotations only."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python create.py ../../musilar/data/genre/choco-audio --jams_version original \\\n    --include isophonics schubert-winterreise billboard chordify \\\n    robbie-williams uspop2002 rwc-pop --n_workers 4\n")),(0,r.kt)("h2",{id:"extracting-statistics-from-a-choco-dataset"},"Extracting statistics from a ChoCo dataset"),(0,r.kt)("p",null,"The computation of descriptive statistics of a ChoCo dataset is divided in 2 steps: (i) extraction of descriptors from every JAMS file in the given collection; (ii) aggregation of statistics per namespace (the type of annotation, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"chord"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"key_mode"),", etc.) and JAMS type (audio or score). The module responsible for this is ",(0,r.kt)("inlineCode",{parentName:"p"},"jams_stats.py"),", which provides a simple CLI for both these steps (see below)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Simple extractor of chord stats from JAMS files.\n\npositional arguments:\n  {extract,aggregate,plot}\n                        Either extract, aggregate, plot.\n  dataset               Directory where JAMS files will be read, or path to the JAMS stats previously generated\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --namespaces NAMESPACES\n                        A list of namespaces to consider for aggregation; if not provided, all namespaces will be used.\n  --out_dir OUT_DIR     Directory where statistics will be saved.\n  --n_workers N_WORKERS\n                        Number of workers for stats computation.\n  --compression COMPRESSION\n                        Compression rate for saving the stats file.\n")),(0,r.kt)("p",null,"Assuming that you have downloaded, or exported, a ChoCo dataset in ",(0,r.kt)("inlineCode",{parentName:"p"},"~/choco-jams"),", then you will have to run the following commands."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python jams_stats.py extract ~/choco-jams/jams --out_dir ~/choco-jams/ --n_workers 4\npython jams_stats.py aggregate ~/choco-jams/jams_stats.joblib\n")))}d.isMDXComponent=!0}}]);